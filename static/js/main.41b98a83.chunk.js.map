{"version":3,"sources":["components/Greeting.js","components/Stats.js","components/Weather.js","components/Background.js","App.js","serviceWorker.js","index.js"],"names":["Greeting","props","state","date","Date","hour","username","this","userData","JSON","parse","localStorage","getItem","setState","name","prompt","setInterval","getHours","nextProps","nextState","setItem","stringify","className","toLocaleTimeString","toLocaleDateString","options","includes","Component","Stats","activeOption","energy","alert","strength","intelligence","charisma","optionCooldown","optionReset","smartOption","charismaOption","displayButton","setTimeout","restoreEnergy","console","log","optionSelectOne","e","lightRain","mostlyCloudy","partlyCloudy","clear","rain","cloudy","drizzle","overcast","humid","optionSelectTwo","optionSelectThree","fun","weather","icon","style","display","onClick","Weather","getLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","long","lat","getWeather","api","fetch","then","response","json","data","temp","currently","temperature","place","timezone","replace","summary","apparentTemp","apparentTemperature","defaults","toUpperCase","color","size","animate","Background","getBackground","res","imageURLS","pageURLS","users","i","hits","length","push","largeImageURL","pageURL","user","backgroundRandomizer","max","index","Math","floor","random","backgroundPhoto","zIndex","width","minHeight","top","left","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","type","placeholder","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.41b98a83.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport class Greeting extends Component {\n  userData;\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n      hour: null,\n      username: null,\n    };\n  }\n  componentDidMount() {\n    //Get username from local storage\n    this.userData = JSON.parse(localStorage.getItem(\"user\"));\n    if (localStorage.getItem(\"user\") !== null) {\n      this.setState({ username: this.userData });\n    } else {\n      let name = prompt(\"What is your name?\");\n      this.setState({ username: name });\n    }\n    //Start and refresh current time and date\n    setInterval(() => {\n      //this.getHour();\n      this.setState({hour: new Date().getHours()})\n      this.setState({ date: new Date() });\n    }, 1000); //Update interval\n  }\n  //Store name in local storage\n  componentWillUpdate(nextProps, nextState) {\n    localStorage.setItem(\"user\", JSON.stringify(nextState.username));\n  }\n/*\n  getHour = () => {\n    const date = new Date();\n    const hour = date.getHours;\n    this.setState({ hour });\n  };\n*/ \n  render() {\n    const { hour, username, date } = this.state;\n    //console.log(this.state)\n    return (\n      <div className=\"greeting-container\">\n        <h1 className=\"time-container\">{date.toLocaleTimeString()}</h1>\n        <h2 className=\"date-container\">\n          {date.toLocaleDateString(\"en-US\", this.state.options)}\n        </h2>\n        <h2 className=\"greeting\">\n          {hour < 12 && date.toLocaleTimeString().includes(\"AM\")\n            ? `Good Morning ${username}`\n            : hour < 5 && date.toLocaleTimeString().includes(\"PM\")\n            ? `Good Afternoon ${username}`\n            : hour > 17 && date.toLocaleTimeString().includes(\"PM\")\n            ? `Good Evening ${username}`\n            : `Good Evening ${username}`}\n        </h2>\n      </div>\n    );\n  }\n}\n\nexport default Greeting;\n","import React, { Component } from \"react\";\nexport class Stats extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      intelligence: 5,\n      strength: 5,\n      charisma: 5,\n      fun: 5,\n      energy: 10,\n      weather: \"\",\n      icon: \"\",\n      options: {\n        clear: [\"Go for a Run\", \"Go to the Museum\", \"Call a friend\"],\n        rain: [\"Watch TV\", \"Read a Book\", \"Sleep\"],\n        cloudy: [\"Go to the movies\", \"Work on vocabulary\", \"Play a game\"],\n        lightRain: [\"Go hiking\", \"Study at the library\", \"Visit a friend\"],\n        mostlyCloudy: [\"Do yoga at the park\", \"Meditate\", \"Go to a BBQ\"],\n        partlyCloudy: [\n          \"Do yoga at the park\",\n          \"Create diagrams\",\n          \"Visit an Aquarium\",\n        ],\n        drizzle: [\n          \"Do some gardening\",\n          \"Practice an instrument\",\n          \"Go to an amusement park\",\n        ],\n        overcast: [\"Go to the gym\", \"Listen to classical music\", \"Volunteer\"],\n        humid: [\"Go swimming at the pool\", \"Go to a book cafe\", \"Go camping with friends\"]\n      },\n      displayButton: true,\n    };\n  }\n\n  activeOption = () => {\n    //Check if energy is less than 2\n    if (this.state.energy < 2) {\n      alert(\"You don't have enough energy! Rest a bit and try again later\");\n    } else {\n      this.setState({\n        strength: this.state.strength + 2,\n        intelligence: this.state.intelligence - 1,\n        charisma: this.state.charisma + 1,\n        energy: this.state.energy - 2,\n      });\n      this.optionCooldown();\n      this.optionReset();\n    }\n  };\n  smartOption = () => {\n    //Check if energy is less than or equal to 0\n    if (this.state.energy <= 0) {\n      alert(\"You don't have enough energy! Rest a bit and try again later\");\n    } else {\n      this.setState({\n        strength: this.state.strength - 1,\n        intelligence: this.state.intelligence + 3,\n        charisma: this.state.charisma - 1,\n        energy: this.state.energy - 1,\n      });\n      this.optionCooldown();\n      this.optionReset();\n    }\n  };\n  charismaOption = () => {\n    //Check if energy is less than 2\n    if (this.state.energy < 2) {\n      alert(\"You don't have enough energy! Rest a bit and try again later\");\n    } else {\n      this.setState({\n        strength: this.state.strength - 1,\n        intelligence: this.state.intelligence + 1,\n        charisma: this.state.charisma + 2,\n        energy: this.state.energy - 2,\n      });\n      this.optionCooldown();\n      this.optionReset();\n    }\n  };\n\n  //Removes option selection after a button is clicked\n  optionCooldown = () => {\n    this.setState({ displayButton: false });\n  };\n  //Makes options reappear after the set time\n  optionReset = () => {\n    setTimeout(() => {\n      this.setState({ displayButton: true });\n    }, 3600000);\n  };\n  //Restores Energy overtime\n  restoreEnergy = () => {\n    setTimeout(() => {\n      this.state.energy < 10\n        ? this.setState({ energy: this.state.energy + 1 })\n        : console.log(this.state.energy);\n      this.restoreEnergy();\n    }, 7000000);\n  };\n\n  //Button Options\n  optionSelectOne = (e) => {\n    switch (e) {\n      case \"Light Rain\":\n        return this.state.options.lightRain[0];\n        break;\n      case \"Mostly Cloudy\":\n        return this.state.options.mostlyCloudy[0];\n        break;\n      case \"Partly Cloudy\":\n        return this.state.options.partlyCloudy[0];\n        break;\n      case \"Clear\":\n        return this.state.options.clear[0];\n        break;\n      case \"Rain\":\n        return this.state.options.rain[0];\n        break;\n      case \"Cloudy\":\n        return this.state.options.cloudy[0];\n        break;\n      case \"Drizzle\":\n        return this.state.options.drizzle[0];\n        break;\n      case \"Overcast\":\n        return this.state.options.overcast[0];\n        break;\n      case \"Humid\":\n        return this.state.options.humid[0];\n        break;\n      default:\n        break;\n    }\n  };\n  optionSelectTwo = (e) => {\n    switch (e) {\n      case \"Light Rain\":\n        return this.state.options.lightRain[1];\n        break;\n      case \"Mostly Cloudy\":\n        return this.state.options.mostlyCloudy[1];\n        break;\n      case \"Partly Cloudy\":\n        return this.state.options.partlyCloudy[1];\n        break;\n      case \"Clear\":\n        return this.state.options.clear[1];\n        break;\n      case \"Rain\":\n        return this.state.options.rain[1];\n        break;\n      case \"Cloudy\":\n        return this.state.options.cloudy[1];\n        break;\n      case \"Drizzle\":\n        return this.state.options.drizzle[1];\n        break;\n      case \"Overcast\":\n        return this.state.options.overcast[1];\n        break;\n      case \"Humid\":\n        return this.state.options.humid[1];\n        break;\n      default:\n        break;\n    }\n  };\n  optionSelectThree = (e) => {\n    switch (e) {\n      case \"Light Rain\":\n        return this.state.options.lightRain[2];\n        break;\n      case \"Mostly Cloudy\":\n        return this.state.options.mostlyCloudy[2];\n        break;\n      case \"Partly Cloudy\":\n        return this.state.options.partlyCloudy[2];\n        break;\n      case \"Clear\":\n        return this.state.options.clear[2];\n        break;\n      case \"Rain\":\n        return this.state.options.rain[2];\n        break;\n      case \"Cloudy\":\n        return this.state.options.cloudy[2];\n        break;\n      case \"Drizzle\":\n        return this.state.options.drizzle[2];\n        break;\n      case \"Overcast\":\n        return this.state.options.overcast[2];\n        break;\n      case \"Humid\":\n        return this.state.options.humid[2];\n        break;\n      default:\n        break;\n    }\n  };\n  componentDidMount() {\n    //this.optionReset();\n    this.restoreEnergy();\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    localStorage.setItem(\"strength\", nextState.strength);\n    localStorage.setItem(\"intelligence\", nextState.intelligence);\n    localStorage.setItem(\"charisma\", nextState.charisma);\n    localStorage.setItem(\"energy\", nextState.energy);\n    //localStorage.setItem(\"displayButton\", nextState.displayButton);\n  }\n  //Retrieve Data from Local Storage\n  componentWillMount() {\n    localStorage.getItem(\n      \"strength\",\n      \"intelligence\",\n      \"charisma\",\n      \"energy\"\n      //\"displayButton\"\n    ) &&\n      this.setState({\n        strength: JSON.parse(localStorage.getItem(\"strength\")),\n        intelligence: JSON.parse(localStorage.getItem(\"intelligence\")),\n        charisma: JSON.parse(localStorage.getItem(\"charisma\")),\n        energy: JSON.parse(localStorage.getItem(\"energy\")),\n        //displayButton: JSON.parse(localStorage.getItem(\"displayButton\")),\n      });\n  }\n  render() {\n    let { intelligence, strength, charisma, energy } = this.state;\n    //console.log(this.props);\n\n    return (\n      <div className=\"option-stats\">\n        <h3>What would you like to do?</h3>\n        <div\n          className=\"option-container\"\n          style={{ display: `${this.state.displayButton ? \"block\" : \"none\"}` }}\n        >\n          <button className=\"option\" onClick={this.activeOption}>\n            {this.optionSelectOne(this.props.weather)}\n          </button>\n          <button className=\"option\" onClick={this.smartOption}>\n            {this.optionSelectTwo(this.props.weather)}\n          </button>\n          <button className=\"option\" onClick={this.charismaOption}>\n            {this.optionSelectThree(this.props.weather)}\n          </button>\n        </div>\n        <div className=\"stats-container\">\n          <ul>\n            <li>Strength:{strength}</li>\n            <li>Intelligence:{intelligence}</li>\n            <li>Charisma:{charisma}</li>\n            <li>Energy:{energy}</li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Stats;\n","//PARENT COMPONENENT OF STATS\n\nimport React, { Component } from \"react\";\nimport ReactAnimatedWeather from \"react-animated-weather\";\nimport Stats from \"./Stats\";\n\nexport class Weather extends Component {\n  constructor() {\n    super();\n    this.state = {\n      long: -73.94998970249429,\n      lat: 40.63292717413113,\n      temp: null,\n      place: null,\n      weather: null,\n      apparentTemp: null,\n      icon: \"\",\n    };\n  }\n\n  //Get user coordinates\n  getLocation = () => {\n    const success = (position) => {\n      const lat = position.coords.latitude;\n      const long = position.coords.longitude;\n      //console.log(lat, long);\n      this.setState({\n        long: position.coords.longitude,\n        lat: position.coords.latitude,\n      });\n    };\n\n    const error = () => {\n      console.log(\"Unable to retrieve your location\");\n    };\n\n    navigator.geolocation.getCurrentPosition(success, error);\n    /*\n    setTimeout(() => {\n      this.getLocation();\n    }, 3000);\n    */\n  };\n\n  //Get weather info\n  getWeather = () => {\n    //Access api data\n    const api = `https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/15abec103b4ca0854030b4462f9754ca/${this.state.lat},${this.state.long}`;\n    fetch(api)\n      .then((response) => {\n        return response.json();\n      })\n      .then(\n        (data) => {\n          //console.log(data);\n          const temp = data.currently.temperature;\n          const place = data.timezone.replace(/_/g, \" \");\n          const weather = data.currently.summary;\n          const apparentTemp =\n            \"(Feels like) \" + data.currently.apparentTemperature;\n          const icon = data.currently.icon;\n          this.setState({ temp, place, weather, icon, apparentTemp });\n        }\n        /*\n        setTimeout(() => {\n          this.getWeather();\n        }, 300000)\n        */\n      );\n  };\n  componentDidMount() {\n    this.getLocation();\n    this.getWeather();\n  }\n\n  render() {\n    let { temp, place, weather, icon, apparentTemp } = this.state;\n    //Parameters for weather icon\n    let defaults = {\n      icon: icon.replace(/-/g, \"_\").toUpperCase(),\n      color: \"white\",\n      size: 150,\n      animate: true,\n    };\n\n    return (\n      <div>\n        <div className=\"icon\">\n          <ReactAnimatedWeather\n            icon={defaults.icon}\n            color={defaults.color}\n            size={defaults.size}\n            animate={defaults.animate}\n          />\n        </div>\n        <div className=\"location-container\">\n          <div className=\"location\">{place}</div>\n        </div>\n        <div className=\"weather-container\">\n          <div className=\"temp\">{temp}&deg;</div>\n          <div className=\"feels-like\">{apparentTemp}</div>\n          <div className=\"weather\">{weather}</div>\n        </div>\n        <Stats weather={weather} />\n      </div>\n    );\n  }\n}\n\nexport default Weather;\n","import React, { Component } from \"react\";\nimport Greeting from \"./Greeting\"\nimport Weather from \"./Weather\";\nexport class Background extends Component {\n  constructor() {\n    super();\n    this.state = {\n      imageURLS: [],\n      pageURLS: [],\n      users: [],\n    };\n  }\n\n  getBackground = () => {\n    const api =\n      \"https://pixabay.com/api/?key=14272018-277a44d4d1ae6e42f42ed7772&q=landscape&image_type=photo\";\n    fetch(api)\n      .then((res) => res.json())\n      .then((data) => {\n        //console.log(data);\n        let imageURLS = [];\n        let pageURLS = [];\n        let users = [];\n        for (let i = 0; i < data.hits.length; i++) {\n          imageURLS.push(data.hits[i].largeImageURL);\n          pageURLS.push(data.hits[i].pageURL);\n          users.push(data.hits[i].user);\n        }\n        this.setState({ imageURLS, pageURLS, users });\n        //console.log(this.state);\n      });\n  };\n\n  backgroundRandomizer = (max) => {\n    let index = Math.floor(Math.random() * Math.floor(max));\n    return this.state.imageURLS[index];\n  };\n  componentDidMount() {\n    this.getBackground();\n  }\n\n  render() {\n    let backgroundPhoto = {\n      zIndex: \"3\",\n      width: \"100%\",\n      minHeight: \"100%\",\n      position: \"absolute\",\n      top: \"0\",\n      left: \"0\",\n      backgroundImage: `url(${this.backgroundRandomizer(\n        this.state.imageURLS.length\n      )})`,\n      backgroundPosition: \"center\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n    };\n    return (\n      <div className=\"background\" style={backgroundPhoto}>\n        <main className=\"main-container\">\n          <div className=\"search-box\">\n            <input type=\"text\" className=\"search-bar\" placeholder=\"Search...\" />\n          </div>\n          <div className=\"flex-container\">\n            <Greeting />\n          </div>\n          <Weather />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Background;\n","import React, { Component } from \"react\";\n\nimport \"./App.css\";\n\nimport Background from \"./components/Background\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Background />\n        \n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}