{"version":3,"sources":["components/Greeting.js","components/Stats.js","components/Weather.js","components/Background.js","App.js","serviceWorker.js","index.js"],"names":["Greeting","props","getHour","hour","Date","getHours","setState","state","date","username","this","userData","JSON","parse","localStorage","getItem","name","prompt","setInterval","nextProps","nextState","setItem","stringify","className","toLocaleTimeString","toLocaleDateString","options","includes","Component","Stats","activeOption","energy","alert","strength","intelligence","charisma","optionCooldown","optionReset","smartOption","charismaOption","displayButton","setTimeout","restoreEnergy","console","log","optionSelectOne","e","lightRain","mostlyCloudy","partlyCloudy","clear","rain","cloudy","drizzle","overcast","optionSelectTwo","optionSelectThree","fun","weather","icon","style","display","onClick","Weather","getLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","long","lat","getWeather","api","fetch","then","response","json","data","temp","currently","temperature","place","timezone","replace","summary","apparentTemp","apparentTemperature","defaults","toUpperCase","color","size","animate","Background","getBackground","res","imageURLS","pageURLS","users","i","hits","length","push","largeImageURL","pageURL","user","backgroundRandomizer","max","index","Math","floor","random","backgroundPhoto","zIndex","width","minHeight","top","left","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","App","type","placeholder","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.061ca587.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport class Greeting extends Component {\r\n  userData;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n      hour: null,\r\n      username: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //Get username from local storage\r\n    this.userData = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (localStorage.getItem(\"user\")) {\r\n      this.setState({ username: this.userData });\r\n    } else {\r\n      let name = prompt(\"What is your name?\");\r\n      this.setState({ username: name });\r\n    }\r\n    //Start and refresh current time and date\r\n    setInterval(() => {\r\n      //this.getHour();\r\n      this.setState({ date: new Date() });\r\n    }, 1000); //Update interval\r\n  }\r\n  //Store name in local storage\r\n  componentWillUpdate(nextProps, nextState) {\r\n    localStorage.setItem(\"user\", JSON.stringify(nextState.username));\r\n  }\r\n\r\n  getHour = () => {\r\n    const date = new Date();\r\n    const hour = date.getHours();\r\n    this.setState({ hour });\r\n  };\r\n\r\n  render() {\r\n    const { hour, username, date } = this.state;\r\n\r\n    return (\r\n      <div className=\"greeting-container\">\r\n        <h1 className=\"time-container\">{date.toLocaleTimeString()}</h1>\r\n        <h2 className=\"date-container\">\r\n          {date.toLocaleDateString(\"en-US\", this.state.options)}\r\n        </h2>\r\n        <h2 className=\"greeting\">\r\n          {hour < 12 && date.toLocaleTimeString().includes(\"AM\")\r\n            ? `Good Morning ${username}`\r\n            : hour < 5 && date.toLocaleTimeString().includes(\"PM\")\r\n            ? `Good Afternoon ${username}`\r\n            : hour > 17 && date.toLocaleTimeString().includes(\"PM\")\r\n            ? `Good Evening ${username}`\r\n            : `Good Evening ${username}`}\r\n        </h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Greeting;\r\n","import React, { Component } from \"react\";\r\nimport { getNodeText } from \"@testing-library/react\";\r\nexport class Stats extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      intelligence: 5,\r\n      strength: 5,\r\n      charisma: 5,\r\n      fun: 5,\r\n      energy: 10,\r\n      weather: \"\",\r\n      icon: \"\",\r\n      options: {\r\n        clear: [\"Go for a Run\", \"Go to the Museum\", \"Call a friend\"],\r\n        rain: [\"Watch TV\", \"Read a Book\", \"Sleep\"],\r\n        cloudy: [\"Go to the movies\", \"Work on vocabulary\", \"Play a game\"],\r\n\r\n        lightRain: [\"Go hiking\", \"Study at the library\", \"Visit a friend\"],\r\n        mostlyCloudy: [\"Do yoga at the park\", \"Meditate\", \"Go to a BBQ\"],\r\n        partlyCloudy: [\r\n          \"Do yoga at the park\",\r\n          \"Create diagrams\",\r\n          \"Visit an Aquarium\",\r\n        ],\r\n        drizzle: [\r\n          \"Do some gardening\",\r\n          \"Practice an instrument\",\r\n          \"Go to an amusement park\",\r\n        ],\r\n        overcast: [\"Go to the gym\", \"Listen to classical music\", \"Volunteer\"],\r\n      },\r\n      displayButton: true,\r\n    };\r\n  }\r\n\r\n  activeOption = () => {\r\n    //Check if energy is less than 2\r\n    if (this.state.energy < 2) {\r\n      alert(\"You don't have enough energy! Rest a bit and try again later\");\r\n    } else {\r\n      this.setState({\r\n        strength: this.state.strength + 2,\r\n        intelligence: this.state.intelligence - 1,\r\n        charisma: this.state.charisma + 1,\r\n        energy: this.state.energy - 2,\r\n      });\r\n      this.optionCooldown();\r\n      this.optionReset();\r\n    }\r\n  };\r\n  smartOption = () => {\r\n    //Check if energy is less than or equal to 0\r\n    if (this.state.energy <= 0) {\r\n      alert(\"You don't have enough energy! Rest a bit and try again later\");\r\n    } else {\r\n      this.setState({\r\n        strength: this.state.strength - 1,\r\n        intelligence: this.state.intelligence + 3,\r\n        charisma: this.state.charisma - 1,\r\n        energy: this.state.energy - 1,\r\n      });\r\n      this.optionCooldown();\r\n      this.optionReset();\r\n    }\r\n  };\r\n  charismaOption = () => {\r\n    //Check if energy is less than 2\r\n    if (this.state.energy < 2) {\r\n      alert(\"You don't have enough energy! Rest a bit and try again later\");\r\n    } else {\r\n      this.setState({\r\n        strength: this.state.strength - 1,\r\n        intelligence: this.state.intelligence + 1,\r\n        charisma: this.state.charisma + 2,\r\n        energy: this.state.energy - 2,\r\n      });\r\n      this.optionCooldown();\r\n      this.optionReset();\r\n    }\r\n  };\r\n\r\n  //Removes option selection after a button is clicked\r\n  optionCooldown = () => {\r\n    this.setState({ displayButton: false });\r\n  };\r\n  //Makes options reappear after the set time\r\n  optionReset = () => {\r\n    setTimeout(() => {\r\n      this.setState({ displayButton: true });\r\n    }, 30000);\r\n  };\r\n  //Restores Energy overtime\r\n  restoreEnergy = () => {\r\n    setTimeout(() => {\r\n      this.state.energy < 10\r\n        ? this.setState({ energy: this.state.energy + 1 })\r\n        : console.log(this.state.energy);\r\n      this.restoreEnergy();\r\n    }, 20000);\r\n  };\r\n\r\n  //Button Options\r\n  optionSelectOne = (e) => {\r\n    switch (e) {\r\n      case \"Light Rain\":\r\n        return this.state.options.lightRain[0];\r\n        break;\r\n      case \"Mostly Cloudy\":\r\n        return this.state.options.mostlyCloudy[0];\r\n        break;\r\n      case \"Partly Cloudy\":\r\n        return this.state.options.partlyCloudy[0];\r\n        break;\r\n      case \"Clear\":\r\n        return this.state.options.clear[0];\r\n        break;\r\n      case \"Rain\":\r\n        return this.state.options.rain[0];\r\n        break;\r\n      case \"Cloudy\":\r\n        return this.state.options.cloudy[0];\r\n        break;\r\n      case \"Drizzle\":\r\n        return this.state.options.drizzle[0];\r\n        break;\r\n      case \"Overcast\":\r\n        return this.state.options.overcast[0];\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  optionSelectTwo = (e) => {\r\n    switch (e) {\r\n      case \"Light Rain\":\r\n        return this.state.options.lightRain[1];\r\n        break;\r\n      case \"Mostly Cloudy\":\r\n        return this.state.options.mostlyCloudy[1];\r\n        break;\r\n      case \"Partly Cloudy\":\r\n        return this.state.options.partlyCloudy[1];\r\n        break;\r\n      case \"Clear\":\r\n        return this.state.options.clear[1];\r\n        break;\r\n      case \"Rain\":\r\n        return this.state.options.rain[1];\r\n        break;\r\n      case \"Cloudy\":\r\n        return this.state.options.cloudy[1];\r\n        break;\r\n      case \"Drizzle\":\r\n        return this.state.options.drizzle[1];\r\n        break;\r\n      case \"Overcast\":\r\n        return this.state.options.overcast[1];\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  optionSelectThree = (e) => {\r\n    switch (e) {\r\n      case \"Light Rain\":\r\n        return this.state.options.lightRain[2];\r\n        break;\r\n      case \"Mostly Cloudy\":\r\n        return this.state.options.mostlyCloudy[2];\r\n        break;\r\n      case \"Partly Cloudy\":\r\n        return this.state.options.partlyCloudy[2];\r\n        break;\r\n      case \"Clear\":\r\n        return this.state.options.clear[2];\r\n        break;\r\n      case \"Rain\":\r\n        return this.state.options.rain[2];\r\n        break;\r\n      case \"Cloudy\":\r\n        return this.state.options.cloudy[2];\r\n        break;\r\n      case \"Drizzle\":\r\n        return this.state.options.drizzle[2];\r\n        break;\r\n      case \"Overcast\":\r\n        return this.state.options.overcast[2];\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    //this.optionReset();\r\n    this.restoreEnergy();\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    localStorage.setItem(\"strength\", nextState.strength);\r\n    localStorage.setItem(\"intelligence\", nextState.intelligence);\r\n    localStorage.setItem(\"charisma\", nextState.charisma);\r\n    localStorage.setItem(\"energy\", nextState.energy);\r\n    //localStorage.setItem(\"displayButton\", nextState.displayButton);\r\n  }\r\n  //Retrieve Data from Local Storage\r\n  componentWillMount() {\r\n    localStorage.getItem(\r\n      \"strength\",\r\n      \"intelligence\",\r\n      \"charisma\",\r\n      \"energy\"\r\n      //\"displayButton\"\r\n    ) &&\r\n      this.setState({\r\n        strength: JSON.parse(localStorage.getItem(\"strength\")),\r\n        intelligence: JSON.parse(localStorage.getItem(\"intelligence\")),\r\n        charisma: JSON.parse(localStorage.getItem(\"charisma\")),\r\n        energy: JSON.parse(localStorage.getItem(\"energy\")),\r\n        //displayButton: JSON.parse(localStorage.getItem(\"displayButton\")),\r\n      });\r\n  }\r\n  render() {\r\n    let { intelligence, strength, charisma, energy } = this.state;\r\n    //console.log(this.props);\r\n\r\n    return (\r\n      <div className=\"option-stats\">\r\n        <h3>What would you like to do?</h3>\r\n        <div\r\n          className=\"option-container\"\r\n          style={{ display: `${this.state.displayButton ? \"block\" : \"none\"}` }}\r\n        >\r\n          <button className=\"option\" onClick={this.activeOption}>\r\n            {this.optionSelectOne(this.props.weather)}\r\n          </button>\r\n          <button className=\"option\" onClick={this.smartOption}>\r\n            {this.optionSelectTwo(this.props.weather)}\r\n          </button>\r\n          <button className=\"option\" onClick={this.charismaOption}>\r\n            {this.optionSelectThree(this.props.weather)}\r\n          </button>\r\n        </div>\r\n        <div className=\"stats-container\">\r\n          <ul>\r\n            <li>Strength:{strength}</li>\r\n            <li>Intelligence:{intelligence}</li>\r\n            <li>Charisma:{charisma}</li>\r\n            <li>Energy:{energy}</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stats;\r\n","//PARENT COMPONENENT OF STATS\r\n\r\nimport React, { Component } from \"react\";\r\nimport ReactAnimatedWeather from \"react-animated-weather\";\r\nimport Stats from \"./Stats\";\r\n\r\nexport class Weather extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      long: -73.94998970249429,\r\n      lat: 40.63292717413113,\r\n      temp: null,\r\n      place: null,\r\n      weather: null,\r\n      apparentTemp: null,\r\n      icon: \"\",\r\n    };\r\n  }\r\n\r\n  //Get user coordinates\r\n  getLocation = () => {\r\n    const success = (position) => {\r\n      const lat = position.coords.latitude;\r\n      const long = position.coords.longitude;\r\n      //console.log(lat, long);\r\n      this.setState({\r\n        long: position.coords.longitude,\r\n        lat: position.coords.latitude,\r\n      });\r\n    };\r\n\r\n    const error = () => {\r\n      console.log(\"Unable to retrieve your location\");\r\n    };\r\n\r\n    navigator.geolocation.getCurrentPosition(success, error);\r\n    /*\r\n    setTimeout(() => {\r\n      this.getLocation();\r\n    }, 3000);\r\n    */\r\n  };\r\n\r\n  //Get weather info\r\n  getWeather = () => {\r\n    //Access api data\r\n    const api = `https://api.darksky.net/forecast/15abec103b4ca0854030b4462f9754ca/${this.state.lat},${this.state.long}`;\r\n    fetch(api)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          //console.log(data);\r\n          const temp = data.currently.temperature;\r\n          const place = data.timezone.replace(/_/g, \" \");\r\n          const weather = data.currently.summary;\r\n          const apparentTemp =\r\n            \"(Feels like) \" + data.currently.apparentTemperature;\r\n          const icon = data.currently.icon;\r\n          this.setState({ temp, place, weather, icon, apparentTemp });\r\n        }\r\n        /*\r\n        setTimeout(() => {\r\n          this.getWeather();\r\n        }, 300000)\r\n        */\r\n      );\r\n  };\r\n  componentDidMount() {\r\n    this.getLocation();\r\n    this.getWeather();\r\n  }\r\n\r\n  render() {\r\n    let { temp, place, weather, icon, apparentTemp } = this.state;\r\n    //Parameters for weather icon\r\n    let defaults = {\r\n      icon: icon.replace(/-/g, \"_\").toUpperCase(),\r\n      color: \"white\",\r\n      size: 150,\r\n      animate: true,\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"icon\">\r\n          <ReactAnimatedWeather\r\n            icon={defaults.icon}\r\n            color={defaults.color}\r\n            size={defaults.size}\r\n            animate={defaults.animate}\r\n          />\r\n        </div>\r\n        <div className=\"location-container\">\r\n          <div className=\"location\">{place}</div>\r\n        </div>\r\n        <div className=\"weather-container\">\r\n          <div className=\"temp\">{temp}&deg;</div>\r\n          <div className=\"feels-like\">{apparentTemp}</div>\r\n          <div className=\"weather\">{weather}</div>\r\n        </div>\r\n        <Stats weather={weather} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Weather;\r\n","import React, { Component } from \"react\";\r\n\r\nexport class Background extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      imageURLS: [],\r\n      pageURLS: [],\r\n      users: [],\r\n    };\r\n  }\r\n\r\n  getBackground = () => {\r\n    const api =\r\n      \"https://pixabay.com/api/?key=14272018-277a44d4d1ae6e42f42ed7772&q=landscape&image_type=photo\";\r\n    fetch(api)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        //console.log(data);\r\n        let imageURLS = [];\r\n        let pageURLS = [];\r\n        let users = [];\r\n        for (let i = 0; i < data.hits.length; i++) {\r\n          imageURLS.push(data.hits[i].largeImageURL);\r\n          pageURLS.push(data.hits[i].pageURL);\r\n          users.push(data.hits[i].user);\r\n        }\r\n        this.setState({ imageURLS, pageURLS, users });\r\n        //console.log(this.state);\r\n      });\r\n  };\r\n\r\n  backgroundRandomizer = (max) => {\r\n    let index = Math.floor(Math.random() * Math.floor(max));\r\n    return this.state.imageURLS[index];\r\n  };\r\n  componentDidMount() {\r\n    this.getBackground();\r\n  }\r\n\r\n  render() {\r\n    let backgroundPhoto = {\r\n      zIndex: \"-1\",\r\n      width: \"100%\",\r\n      minHeight: \"100%\",\r\n      position: \"absolute\",\r\n      top: \"0\",\r\n      left: \"0\",\r\n      backgroundImage: `url(${this.backgroundRandomizer(\r\n        this.state.imageURLS.length\r\n      )})`,\r\n      backgroundPosition: \"center\",\r\n      backgroundSize: \"cover\",\r\n      backgroundRepeat: \"no-repeat\",\r\n    };\r\n    return (\r\n      <div className=\"background\" style={backgroundPhoto}>\r\n        <div className=\"credits\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Background;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Greeting from \"./components/Greeting\";\nimport Weather from \"./components/Weather\";\nimport Background from \"./components/Background\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Background />\n        <main>\n          <div className=\"search-box\">\n            <input type=\"text\" className=\"search-bar\" placeholder=\"Search...\" />\n          </div>\n          <div className=\"flex-container\">\n            <Greeting />\n          </div>\n          <Weather />\n        </main>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}